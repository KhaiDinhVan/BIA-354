<p>a. No, One disk can contain one and only one movie&nbsp;</p><p>b. Yes, at least one movie</p><p>c. Customers can rent one to many disks</p><p>d. Yes, the customer can exist because the customer data is store in a separate entity called customer, which has its own identifier. <strong>(No)</strong></p><p>e. Because it is a unique attribute/identifier, which gives a unique identification number each time a value is entered&nbsp;</p><p>f. A composite attribute, an attribute that has smaller attributes to make meaning of it.</p><p>g. One and only one store to at least one or many disks. (Mandatory one to mandatory many)</p><p>h. Associative entity. Since the Binary relationship between Disk and Customer is many to many, we have to create Rental (Associative entity) in order to links these two entities together. Rental's attributes, in this case, come from itself, its own independent attribute. <strong>(ask)</strong></p><p>i. There seems to be no identifier for Rental base on the model. either serial_number and customer_id or a unique rental id could be the identifier. <strong>(add date as the identifier)</strong></p><p>j. I would add the identifiers (serial_number and customer_id) to the Rental entity. <strong>(Associative entity in actor and movie)</strong></p><p>2.&nbsp;</p><p>Each customer can purchase at least one to many books, and each book may be sold to no one or many people.&nbsp;</p><p>Each publisher may publish many books, but each book must be published by one and only one publisher.&nbsp;</p><p>Each book is written by at least one to many authors, and each author must write at least one to many books.</p><p>&nbsp;</p>