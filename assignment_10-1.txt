<p>How do the security fundamentals&nbsp;relate to databases and why are they important? How might the breach of these security fundamentals affect organizational data?</p><ul><li>Databases are the most important thing on a server since they contain personal information from users and the organization information. Because of this importance, everything that the security fundamentals do is to protect the databases.</li><li>Availability: if the server lost connection to the database, it could cost a company a lot of money because of the data not being updated consistently&nbsp;</li><li>Confidentiality: People could take advantage of sensitive information</li><li>Integrity: An error might cause a wrong transaction and cost a company money</li><li>Accountability: An worker could try to delete data without know one knowing it.</li></ul><ol><li>Describe the difference between authentication and authorization. How are they both important in protecting organizational data?<ul><li>Authentication is the process of confirming the identity of the user. Whereas authorization is the process of managing the access to data performed by certain users.</li><li>By using these two security features, we can know who exactly is trying to access the system and what privilege does he has against the system.</li></ul></li><li>Consider that your company&nbsp;experiences downtime that hinders current projects with a cost of $202,540 for every hour&nbsp;of downtime. Your&nbsp;company estimates that they have 99.9% availability and want to determine if it is worth the cost to increase to 99.99% availability. They expect the cost to upgrade their systems would be an additional $250,000 per month. Answer the following questions based on the following data:<br>&nbsp;</li></ol><figure class="table"><table style="background-color:rgb(255, 255, 255);"><tbody><tr><td style="padding:2px;"><strong>Availability</strong></td><td style="padding:2px;"><strong>Minutes of Downtime</strong></td><td style="padding:2px;"><strong>Hours of Downtime</strong></td></tr><tr><td style="padding:2px;">99.999%</td><td style="padding:2px;">9</td><td style="padding:2px;">0.16</td></tr><tr><td style="padding:2px;">99.99%</td><td style="padding:2px;">96</td><td style="padding:2px;">1.61</td></tr><tr><td style="padding:2px;">99.9%</td><td style="padding:2px;">965</td><td style="padding:2px;">16.09</td></tr><tr><td style="padding:2px;">99.5%</td><td style="padding:2px;">4827</td><td style="padding:2px;">80.45</td></tr><tr><td style="padding:2px;">99%</td><td style="padding:2px;">9654</td><td style="padding:2px;">160.90</td></tr></tbody></table></figure><ol><li type="a">What is the current cost of system unavailability?<ul><li type="a">16.09 x 202,540 = <strong>3,258,868.6</strong></li></ul></li><li type="a">What is the savings in increasing the&nbsp;availability alone?<ol><li type="a">16.09 x 202,540 = 3,258,868.6</li><li type="a">1.61 x 202,540 = 326,089.4</li><li type="a"><strong>Saving:</strong> 3,258,868.6 - 326,089.4 = <strong>2,932,779.2</strong></li></ol></li><li type="a">What is the cost to upgrade?<ol><li type="a">Cost to upgrade: 250,000 x 12 = <strong>3,000,000</strong></li><li type="a"><strong>Total Cost: 2,932,779.2 - 3,000,000 = -67220.8</strong></li></ol></li><li type="a">Would it be worth the upgrade?<ol><li type="a">No, the company would be losing money the first year.</li></ol></li><li>Name three general ways to prevent SQL injections and provide one specific instance for one of these ways you specified.&nbsp;Identify a specific weakness in your group project where an SQL injection could exploit your database.<ol><li>Prepare Statements, Store Procedures, Allow-list Input Validation</li><li>Use prepared statements for the user input instead of using the variable in the query statement</li><li>In our database, we use the name of the people we want to grant access to instead of using a prepared statement. OR we often use the exact data instead of assigning that data to a variable.&nbsp;</li></ol></li><li>Are&nbsp;versioning or locking mechanisms better when handling modification of data? Defend your answer.<ol><li>Locking mechanizing would be better because:<ol><li>Prevent losing data from consistent refreshing generate by using versioning</li><li>Prevent multiple people from updating the same data</li></ol></li></ol></li><li>What is the hashed value for the password <i>pA5sw0rdsR4chumPs</i> using MD5?<ol><li>e1d1780bd46492e1c79fa514b23c21c6</li></ol></li><li>What is the hashed value for the password <i>iLvB!A354</i> using SHA1? Which is more secure? Justify your answer.<ol><li>fa91aaeab06a2d4860b200a761395e74c16bbb00</li><li>SHA1 because it has longer characters and more bits, is slower more secure with 2^80 operations</li></ol></li><li>Why is it a good idea to keep an audit trail of what happens in your database?<ol><li>Because it helps you to trace back who has done what to the database, make people be responsible to maintain the integrity of the database</li></ol></li></ol>